"""
Handlers for all commands
"""
import os
import math
import random
from telegram.ext import (CommandHandler, MessageHandler, Filters,
                          RegexHandler, ConversationHandler)
from telegram import ReplyKeyboardMarkup, KeyboardButton
import classes
import constants
import pyowm

USERS = {}

MAIN_MENU_MARKUP = ReplyKeyboardMarkup([['–¢–µ–∫—Å—Ç –¥–æ–∫–ª–∞–¥–∞ üìì', '–ì–µ–æ–ø–æ–∑–∏—Ü–∏—è üåé'],
                                        ['–û—Å—Ç–∞–≤–∏—Ç—å –∫–æ–º–µ–Ω—Ç–∞—Ä–∏–π üò°', '–ü–æ–≥–æ–¥–∞Ô∏è üå§Ô∏è'],
                                        ['–ò—Å—Ö–æ–¥–Ω–∏–∫–∏ ‚ÑπÔ∏è', '–°–ª—É—á–∞–π–Ω—ã–π —Ñ–∞–∫—Ç –ø—Ä–æ –¥–æ–∫–ª–∞–¥ ü§î']],
                                       resize_keyboard=True)
MARK, CONTACT = range(2)


# TEXT PART
def report_text(bot, update):
    markup = ReplyKeyboardMarkup([['–°–ª–∞–π–¥ 1', '–°–ª–∞–π–¥ 2'],
                                  ['–°–ª–∞–π–¥ 3', '–°–ª–∞–π–¥ 4'],
                                  ['–°–ª–∞–π–¥ 5', '–°–ª–∞–π–¥ 6'],
                                  ['–°–ª–∞–π–¥ 7', '–°–ª–∞–π–¥ 8'],
                                  ['–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é']])

    update.message.reply_text('–î–æ–∫–ª–∞–¥—á–∏–∫ —á–∏—Ç–∞–µ—Ç —Å –ª–∏—Å—Ç–æ—á–∫–∞)))\n'
                              '–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ —Ç–æ–∂–µ üôÉ',
                              reply_markup=markup)


def report(bot, update):
    text = update.message.text
    try:
        num = int(text[-1:])
    except ValueError:
        update.message.reply_text('–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫..')
        return
    update.message.reply_text(constants.slides[num])


# MAIN MENU
def start(bot, update):
    update.message.reply_text('–ü—Ä–∏–≤–µ—Ç!\n'
                              '–Ø —á–∞—Ç-–±–æ—Ç, —Å–æ–∑–¥–∞–Ω—ã–π –¥–ª—è –Ω–∞—É—á–Ω–æ–π –∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏–∏\n\n'
                              '–°–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ –≤—ã —É–∂–µ –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –Ω–∞ –Ω–µ–π. '
                              '–ú–æ–∂–µ—Ç–µ –ø–æ–ª–∞–∑–∏—Ç—å –ø–æ –ø—É–Ω–∫—Ç–∞–º –º–µ–Ω—é, —Ç—É—Ç –º–Ω–æ–≥–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–≥–æ. üëå',
                              reply_markup=MAIN_MENU_MARKUP)


def main_menu(bot, update):
    update.message.reply_text('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é...',
                              reply_markup=MAIN_MENU_MARKUP)


# WEATHER
def weather(bot, update):
    """
    key = os.environ.get('OWM')
    owm = pyowm.OWM(key)

    observation = owm.weather_at_place('Kharkiv, ua')
    w = observation.get_weather()

    temp = w.get_temperature('celsius')
    w.get_wind()['speed']
    w.get_humidity()),
    """

    temp = {"temp_max":1.0,
            "temp_min":1.0,
            "temp":1.0,
            "humidity":80,
            "speed":4}

    update.message.reply_text("""
<b>–ü–û–ì–û–î–ê –í –•–ê–†–¨–ö–û–í–ï</b>
–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞:
–º–∏–Ω–∏–º–∞–ª—å–Ω–∞—è - {0}
—Å—Ä–µ–¥–Ω—è—è - {1}
–º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è - {2}

–°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞: {3} –º/—Å
–û–±–ª–∞—á–Ω–æ—Å—Ç—å: {4} %
""".format(temp['temp_min'], temp['temp'], temp['temp_max'], temp['speed'], temp['humidity']),
                              parse_mode='HTML')


# LOCATION
def location(bot, update):
    markup = ReplyKeyboardMarkup([[KeyboardButton('–ú–æ–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ',request_location=True)],['–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é']],
                                 resize_keyboard=True)
    update.message.reply_text('–ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –∏–ª–∏ –∂–∏–∑–Ω—å!', reply_markup=markup)


def location_calculate(lt1, lng1, lt2, lng2):
    EARTH_RADIUS = 6372795

    lat1 = lt1 * math.pi / 180
    long1 = lng1 * math.pi / 180
    lat2 = lt2 * math.pi / 180
    long2 = lng2 * math.pi / 180

    cl1 = math.cos(lat1)
    cl2 = math.cos(lat2)
    sl1 = math.sin(lat1)
    sl2 = math.sin(lat2)

    delta = long2 - long1
    cdelta = math.cos(delta)
    sdelta = math.sin(delta)

    y = math.sqrt((cl2 * sdelta)**2 + (cl1 * sl2 - sl1 * cl2 * cdelta)**2)
    x = sl1 * sl2 + cl1 * cl2 * cdelta

    ad = math.atan2(y, x)
    dist = ad * EARTH_RADIUS

    #–≤ –º–µ—Ç—Ä–∞—Ö
    return dist


def location_handler(bot, update):
    long = update.message.location.longitude
    lati = update.message.location.latitude

    lat_k = 49.9992089
    long_k = 36.2429473

    res = location_calculate(lati, long, lat_k, long_k)

    update.message.reply_text('–î–æ <b>–•–ö–¢–ö</b> {} –∫–º'.format(round(res / 1000, 2)), parse_mode='HTML')


# SOURCE
def source(bot, update):
    update.message.reply_text('–û–¢–ö–†–´–¢–†–´–ô –ò–°–•–û–î–ù–´–ô –ö–û–î!!!11!\n'
                              '–≠–¢–û –ñ–ï –ü–†–Ø–ú <b>GNU</b> !!11!\n'
                              'https://github.com/orlovw/xktkbot',
                              reply_markup=MAIN_MENU_MARKUP,
                              parse_mode='HTML')


# PHOTO PART
def photo(bot, update):
    photo_id = update.message.photo[-1].file_id
    update.message.reply_text(photo_id, quote=True)


def photo_send(bot, update):
    update.message.reply_photo(photo=random.choice(constants.photos))



# RANDOM_FACT
def random_fact(bot, update):
    answer = random.choice(constants.facts)
    update.message.reply_text(answer)


# COMMENTS PART
def comment(bot, update):
    user = update.message.from_user
    new_user = classes.User(username=user.username, first_name=user.first_name, last_name=user.last_name)
    chat_id = update.message.chat_id
    USERS.update({chat_id: new_user})

    markup=ReplyKeyboardMarkup([['/cancel']], resize_keyboard=True)
    update.message.reply_text('–í–∏–∂—É –≤—ã —Ä–µ—à–∏–ª–∏ –æ—Å—Ç–∞–≤–∏—Ç—å <b>–ì–ù–ï–í–ù–´–ô</b> –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π?\n'
                              '–û–∫–µ–π, —è —Ç–æ–ª—å–∫–æ –∑–∞!\n\n–ú–æ–∂–µ—Ç–µ –ø–∏—Å–∞—Ç—å, –≤—Å–µ —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ!\n'
                              '–î–æ—Å—Ç–∞–≤–∫—É –±–µ—Ä—É –Ω–∞ —Å–µ–±—è)\n'
                              '–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /cancel –¥–ª—è –æ—Ç–º–µ–Ω—ã',
                              quote=True, parse_mode='HTML', reply_markup=markup)
    return MARK


def mark(bot, update):
    chat_id = update.message.chat_id
    text = update.message.text
    user = USERS.get(chat_id)
    user.add_comment(text)
    update.message.reply_text('–ù–∞–≤–µ—Ä–Ω–æ–µ —Ç–∞–º —á—Ç–æ-—Ç–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–µ, –∂–∞–ª—å —è –Ω–µ —É–º–µ—é —á–∏—Ç–∞—Ç—å üò¢\n\n'
                              '–°–∫–æ–ª—å–∫–æ –± –≤—ã –ø–æ—Å—Ç–∞–≤–∏–ª–∏ –¥–æ–∫–ª–∞–¥—É –ø–æ 12-–±–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º–µ?\n',
                              quote=True)
    return CONTACT


def contact(bot, update):
    chat_id = update.message.chat_id
    text = update.message.text
    try:
        text = int(text)
    except ValueError:
        update.message.reply_text('–û—Ü–µ–Ω–∫–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —á–∏—Å–ª–æ–º (–Ω—É –∫ –ø—Ä–∏–º–µ—Ä—É 1)\n'
                                  '–ê—Ä–∞–±—Å–∫–∏–º–∏ —Ü–∏—Ñ—Ä–∞–º–∏ —Å–ª–µ–≤–æ –Ω–∞–ø—Ä–∞–≤–æ (–¥–∏—Å–∫—Ä–µ—Ç–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –∏—Å—á–µ–ª—Å–ª–µ–Ω–∏—è,'
                                  ' –º–æ–∂–Ω–æ –¥—Ä–æ–±–Ω–æ–µ —á–∏—Å–ª–æ(—ç—Ç–æ –Ω–µ –±–∞–≥ –∞ —Ñ–∏—á–∞!))')
        return CONTACT

    if text > 12:
        update.message.reply_text('–ê —É –≤–∞—Å —á–∏—Å–ª–æ –±–æ–ª—å—à–µ 12, –≤ –∫—É—Ä—Å–µ?)')
        return CONTACT

    if text < 0:
        update.message.reply_text('–ê —É –≤–∞—Å —á–∏—Å–ª–æ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ, –≤ –∫—É—Ä—Å–µ?)')
        return CONTACT

    user = USERS.get(chat_id)
    user.add_mark(text)
    #239062390 - @orlow
    bot.sendMessage(chat_id='239062390', text=user.show())
    update.message.reply_text('–Ø –æ—Ç–ø—Ä–∞–≤–∏–ª –∫–æ–º–µ–Ω—Ç–∞—Ä–∏–π –∏ –æ—Ü–µ–Ω–∫—É –¥–æ–∫–ª–∞–¥—á–∏–∫—É\n'
                              '–°–ø–∞—Å–∏–±–æ –∑–∞ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ <i>–¥–æ–ª–≥–æ–π –∏ –Ω—É–¥–Ω–æ–π</i> —Ñ–æ—Ä–º—ã\n',
                              quote=True,
                              reply_markup=MAIN_MENU_MARKUP,
                              parse_mode='HTML')
    return ConversationHandler.END


def cancel(bot, update):
    chat_id = update.message.chat_id
    USERS.pop(chat_id, None)
    update.message.reply_text('–û–∫–µ–π, –æ—Ç–º–µ–Ω—è—é',
                              quote=True,
                              reply_markup=MAIN_MENU_MARKUP)
    return ConversationHandler.END




conv_handler = ConversationHandler(
        entry_points=[RegexHandler('–û—Å—Ç–∞–≤–∏—Ç—å –∫–æ–º–µ–Ω—Ç–∞—Ä–∏–π üò°', comment)],

        fallbacks=[CommandHandler('cancel', cancel)],

        states={
            MARK: [MessageHandler(Filters.text, mark)],

            CONTACT: [MessageHandler(Filters.text, contact)]

        })

bot_handlers = [CommandHandler('start', start),
                RegexHandler('–ò—Å—Ö–æ–¥–Ω–∏–∫–∏ ‚ÑπÔ∏è', source),
                RegexHandler('–¢–µ–∫—Å—Ç –¥–æ–∫–ª–∞–¥–∞ üìì', report_text),
                RegexHandler('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', main_menu),
                RegexHandler('–°–ª—É—á–∞–π–Ω—ã–π —Ñ–∞–∫—Ç –ø—Ä–æ –¥–æ–∫–ª–∞–¥ ü§î', random_fact),
                RegexHandler('–ì–µ–æ–ø–æ–∑–∏—Ü–∏—è üåé', location),
                RegexHandler('–ü–æ–≥–æ–¥–∞Ô∏è üå§Ô∏è', weather),
                RegexHandler('–°–ª–∞–π–¥ [1-8]', report),
                RegexHandler('–°–ª—É—á–∞–π–Ω–∞—è –∫–∞—Ä—Ç–∏–Ω–∫–∞', photo_send),

                MessageHandler(Filters.location, location_handler),
                MessageHandler(Filters.photo, photo),
                conv_handler]